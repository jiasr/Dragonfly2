name: Compatibility E2E Test

on:
  push:
    branches: [main, release-*]
    paths-ignore: ["**.md", "**.png", "**.jpg", "**.svg", "**/docs/**"]
  pull_request:
    branches: [main, release-*]
    paths-ignore: ["**.md", "**.png", "**.jpg", "**.svg", "**/docs/**"]
  schedule:
    - cron: '0 4 * * *'

env:
  GO_VERSION: 1.17
  KIND_VERSION: v0.11.1
  CONTAINERD_VERSION: v1.5.2
  KIND_CONFIG_PATH: test/testdata/kind/config.yaml
  DRAGONFLY_STABLE_IMAGE_TAG: v2.0.3-beta.1
  DRAGONFLY_CHARTS_PATH: deploy/helm-charts/charts/dragonfly
  DRAGONFLY_CHARTS_CONFIG_PATH: test/testdata/charts/config.yaml
  DRAGONFLY_FILE_SERVER_PATH: test/testdata/k8s/file-server.yaml
  DRAGONFLY_PROXY_SERVER_PATH: test/testdata/k8s/proxy.yaml

jobs:
  compatibility_e2e_tests:
    name: e2e_tests_with_${{ matrix.module }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module: ["manager", "scheduler", "cdn", "dfdaemon"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Get dependencies
        run: |
          go mod download github.com/go-task/slim-sprig
          go install github.com/onsi/ginkgo/v2/ginkgo@v2.1.0
          mkdir -p /tmp/artifact
          go mod vendor

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Setup Kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: ${{ env.KIND_VERSION }}
          config: ${{ env.KIND_CONFIG_PATH }}

      - name: Build images
        run: |
          hack/gen-buildx.sh
          make docker-build docker-build-testing-tools
          docker pull dragonflyoss/${{ matrix.module }}:${{ env.DRAGONFLY_STABLE_IMAGE_TAG }}
          make kind-load
          kind load docker-image dragonflyoss/${{ matrix.module }}:${{ env.DRAGONFLY_STABLE_IMAGE_TAG }}

      - name: Setup dragonfly
        run: |
          helm install --wait --timeout 10m --dependency-update --create-namespace --namespace dragonfly-system --set ${{ matrix.module }}.tag=${{ env.DRAGONFLY_STABLE_IMAGE_TAG }} --set ${{ matrix.module }}.image=dragonflyoss/${{ matrix.module }} -f ${{ env.DRAGONFLY_CHARTS_CONFIG_PATH }} dragonfly ${{ env.DRAGONFLY_CHARTS_PATH }}
          kubectl apply -f ${{ env.DRAGONFLY_FILE_SERVER_PATH }}
          kubectl apply -f ${{ env.DRAGONFLY_PROXY_SERVER_PATH }}
          kubectl wait po file-server-0 --namespace dragonfly-e2e --for=condition=ready --timeout=10m
          kubectl wait po file-server-no-content-length-0 --namespace dragonfly-e2e --for=condition=ready --timeout=10m
          kubectl wait po proxy-0 --namespace dragonfly-e2e --for=condition=ready --timeout=10m
          kubectl wait po proxy-1 --namespace dragonfly-e2e --for=condition=ready --timeout=10m
          kubectl wait po proxy-2 --namespace dragonfly-e2e --for=condition=ready --timeout=10m

      - name: Run Compatibility E2E test
        env:
          DRAGONFLY_COMPATIBILITY_E2E_TEST_MODE: ${{ matrix.module }}
        run: make actions-e2e-test-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
          flags: ${{ matrix }}-compatibility-e2etests

      - name: Upload Logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.module }}-compatibility-e2e-tests-logs
          path: |
            /tmp/artifact/**/*.log
